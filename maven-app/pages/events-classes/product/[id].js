/* eslint-disable */
import { useState, useEffect } from 'react';
import { useRouter } from 'next/router'
import mockData from '../../../utils/mockData';

import Head from 'next/head'
import Navbar from '../../../components/navbar'
import Footer from '../../../components/footer'
import Heading from '../../../components/heading'
import MailingList from '../../../components/mailingList'
import Subheading from '../../../components/subheading'

import ProfileContainer from '../../../components/blocks/profileContainer'
import CardContainer from '../../../components/blocks/cardContainer';
import EventContainer from '../../../components/blocks/eventContainer';
import Product from 'lib/models/product';
import Notfound from '../../../components/notFound';
import { server } from 'lib/config/server';
import { getSession } from "next-auth/client";

const eventSchema = [
  {
    img: "https://images.unsplash.com/photo-1564832586408-3b10f4f41541?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1190&q=80",
    link: "/hebrew",
    month: "April",
    day: "21",
    title: 'Sed ut perspicita',
    description: 'Nemo eneim ipasam voluialf quiaf skfdjaiufa sit asfkljdsfi s oid a dkflas idsfla jldkssldflao fasdhlsd. Askdfjlskfja  dfkslf NEefkasfdl.'
  },
  {
    img: "https://images.unsplash.com/photo-1564832586408-3b10f4f41541?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1190&q=80",
    link: "/hebrew",
    month: "April",
    day: "21",
    title: 'Sed ut perspicita',
    description: 'Nemo eneim ipasam voluialf quiaf skfdjaiufa sit asfkljdsfi s oid a dkflas idsfla jldkssldflao fasdhlsd. Askdfjlskfja  dfkslf NEefkasfdl.'
  },
  {
    img: "https://images.unsplash.com/photo-1564832586408-3b10f4f41541?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1190&q=80",
    link: "/hebrew",
    month: "April",
    day: "21",
    title: 'Sed ut perspicita',
    description: 'Nemo eneim ipasam voluialf quiaf skfdjaiufa sit asfkljdsfi s oid a dkflas idsfla jldkssldflao fasdhlsd. Askdfjlskfja  dfkslf NEefkasfdl.'
  }
]

// check user authentication before accessing this page
export async function getServerSideProps(context) {
  // session
  const session = await getSession({ req: context.req });
  if (!session) {
    return {
      redirect: {
        destination: `${server}/login`,
        permanent: false,
      },
    };
  }
  return {
    // set session and token
    props: { session },
  };
}


//function ClassEvent({ params, classes }) {
const ClassEvent = (props) => {
  // variable to contain products from backend
  const [productState, setProductsState] = useState([]);  
  // variable to toggle loading gif
  const [isLoading, setIsLoading] = useState(true);
  // variable to toggle error message
  const [hasError, setHasError] = useState(false);
  // variable to contain host from backend
  const [hostState, setHostsState] = useState([]);  
  const [slug, setSlug] = useState(null);
  const [empty, setEmpty] = useState(false);
 
  const router = useRouter();

  //const eventData = classes[id]
  let product = new Product();

  useEffect(async () => {
    setIsLoading(true);
    if (!props.session) {
      router.push(`${server}/login`)
    }
    if (router.isReady) {
      const { id } = router.query;
      setSlug(id);
      const userId =  props.session.user.id
      await product.getProduct(id,userId).then((response) => {
        const organization = props.session.user.role === 'partner' ? true : false;
        response.data['organization'] = organization;
        setProductsState(response.data);
        setHostsState(response.data.hostMeta)
        if(!response.data.name){
          setEmpty(true);
        }
        setIsLoading(false);
    
      }).catch((error) => {
        setHasError(true);
        setIsLoading(true);
      });
    }
  }, [router])  
 
  return (
    <div className="min-h-fullpage">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="w-full">
        <Navbar />
      </header>
      <main>
        <Heading
          breadcrumbs={[
            {
              link: "/",
              label: "Home"
            },
            {
              link: "/events-classes",
              label: "Events & Classes"
            },
            {
              link: "/"+slug,
              //label: eventData.event_name
              label:productState.name
            }
          ]}
        />
        {empty ? <Notfound />
        : 
        <>
          { isLoading ||  hasError ?   
            <div className="border border-blue-300 shadow rounded-md p-4 max-w-sm w-full mx-auto mb-16">
              <div className="animate-pulse flex space-x-4">
                <div className="rounded-full bg-blue-400 h-12 w-12"></div>
                <div className="flex-1 space-y-4 py-1">
                  <div className="h-4 bg-blue-400 rounded w-3/4"></div>
                  <div className="space-y-2">
                    <div className="h-4 bg-blue-400 rounded"></div>
                    <div className="h-4 bg-blue-400 rounded w-5/6"></div>
                  </div>
                  { hasError ? <div>Something Went Wrong!!!</div> : ' ' }
                </div>
              </div>
            </div>
          :
          <>
            <EventContainer
              eventData={productState}
              purchased={false}
            />

            { hostState.length > 0 && 
              <ProfileContainer
                schema={hostState}
              />
            } 
            
            <Subheading
              content="Explore Similar Classes and Events"
            />

            <CardContainer
              schema={eventSchema}
            />
          </>  
          }
        </>  
        } 
        
      </main>
      <MailingList />
      <Footer />
    </div>
  )
}


export default ClassEvent